標  題: Envy/Merc Chinese Patch

這是我以前的 POST ...
目前有收錄 Patch 只有 140.114.77.5 的 Wyvern 製作的精華板 ,因為原 post 在
他當板主之前 ,沒收錄到 ,所以重 Post 一份 ,讓他收錄進去好了 :)
有興趣的人可以到 140.114.77.5 參觀一下。

前一陣子有人在 MUD版上問 Merc MUD 如何解決中文問題 ....
現在先列出下面幾個比較重要的修正部份 ,我看過 Merc22 , Envy10 及 TheIsles1x
的 Source ...
基本上遇到的問題是通訊和讀Area 檔的部份 ,

一、通訊部份修改 comm.c
在 void read_from_buffer 裡有幾行
>       if ( d->inbuf[i] == '\b' && k > 0 )
>           --k;
>       else if ( isascii(d->inbuf[i] ) && isprint( d->inbuf[i] ) )
>           d->incomm[k++] = d->inbuf[i];
改為
>       if ( d->inbuf[i] == '\b' && k > 0 )
>           --k;
>       else /* if ( isascii( d->inbuf[i] ) && isprint( d->inbuf[i] ) ) */
>                                         /*  by pass all characters */
>           d->incomm[k++] = d->inbuf[i];
讓所有的字串都進入 d->incomm 裡...

然後在 void nanny 裡宣告完變數後插入一行
>    while ( isspace(*argument) || *argument<0           /* delete illegal  */
>       || !isascii(*argument) || !isprint(*argument) ) /* chars -- Wyvern */
>       argument++;

這樣子通訊方面的中文問題 ,應該就算解決了!

二、讀取中文部份更改原 db.c
在 fread_string 裡的
>char *fread_string( FILE *fp )
>{
>    char *plast;
>    char c;
>
>    plast = top_string + sizeof(char *);
>    if ( plast > &string_space[MAX_STRING - MAX_STRING_LENGTH] )
>    {
>       bug( "Fread_string: MAX_STRING %d exceeded.", MAX_STRING );
>       exit( 1 );
>    }
>
>    /*
>     * Skip blanks.
>     * Read first char.
>     */
>    do
>    {
>       c = getc( fp );
>    }
>    while ( isspace(c) );
>
>    if ( ( *plast++ = c ) == '~' )
>       return &str_empty[0];
>
>    for ( ;; )
>    {
>       /*
>        * Back off the char type lookup,
>        *   it was too dirty for portability.
>        *   -- Furey
>        */
>       switch ( *plast = getc( fp ) )
>       {
>       default:
>           plast++;
>           break;
>
>       case EOF:
>           bug( "Fread_string: EOF", 0 );
>           exit( 1 );
>           break;
>
>       case '\n':
>           plast++;
>           *plast++ = '\r';
>           break;
>
>       case '\r':
>           break;
>
>       case '~':
>           plast++;
改為
>char *fread_string( FILE *fp )
>{
>    char *plast;
>    char  c;
>    bool fChinese,fLast;
>    fChinese = FALSE;
>    fLast = FALSE ;
>    plast = top_string + sizeof( char * );
>    if ( plast > &string_space [ MAX_STRING - MAX_STRING_LENGTH ] )
>    {
>       bug( "Fread_string: MAX_STRING %d exceeded.", MAX_STRING );
>       exit( 1 );
>    }
>
>    /*
>     * Skip blanks.
>     * Read first char.
>     */
>    do
>    {
>       c = getc( fp );
>    }
>    while ( isspace( c ) && (c >=0) );
>    if (c>=0)
>       fChinese=FALSE;
>    else
>       fChinese=TRUE;
>    if ( ( *plast++ = c ) == '~' )
>       return &str_empty[0];
>
>    for ( ;; )
>    {
>       /*
>        * Back off the char type lookup,
>        *   it was too dirty for portability.
>        *   -- Furey
>        */
>       /*
>        * Checking for Chinese Character or not!!
>        *
>        *   -- CGS
>        */
>       fLast = fChinese;
>       *plast = getc(fp);
>       if (fChinese)
>          fChinese = FALSE;
>       else if ( ( *plast >= '\x81') && ( *plast <='\xFF') )
>          fChinese = TRUE;
>       else
>          fChinese = FALSE;
>       switch ( *plast )
>       {
>       default:
>           plast++;
>           break;
>
>       case EOF:
>           bug( "Fread_string: EOF", 0 );
>           exit( 1 );
>           break;
>
>       case '\n':
>           plast++;
>           *plast++ = '\r';
>           break;
>
>       case '\r':
>           break;
>
>       case '~':
>           plast++;
>           if (fLast) break;
大致上可解決讀檔時 ~ 是否被中文包含的問題。
然後把舊的 smash_tilde 改成下面的型式即可
/*
 * Removes the tildes from a string.
 * Used for player-entered strings that go into disk files.
 */
void smash_tilde( char *str )
{
    bool fChinese,fLast;
    fChinese = FALSE;
    for ( ; *str != '\0'; str++ )
    {
        fLast = fChinese;
        if (fChinese)
           fChinese = FALSE;
        else if ( ( *str >= '\x81') && ( *str <='\xFF') )
           fChinese = TRUE;
        else
           fChinese = FALSE;
        if ( *str == '~' && !fLast)
           *str = '-';
    }
    if (fChinese)
        *--str = '\0';
    return;
}

如此大致上 ,Merc裡有關中文處理的問題應該就算是解決了!
其他小問題就留給自己有志於當 GOD的諸位們自行解決了 ,但是當你想修改一份
新的 Merc/Envy或TheIsles時 ,先想想是否有足夠的精力投入這項工作 ,如果沒
有的話 ,當目前其他的 MUD的 Imm一步一步看看別人如何改起來 ,再構築一份心
目中理想的MUD 可能會好一些。

上面所有有關的中文解決方案就是目前消失的亞特蘭提斯所採用的程式碼 ,通訊
部份是沿用 4040 的方法 ,Area檔部份是自己寫的 ,希望對其他想中文化的人提
供一些經驗 ,減少中文化時所花的時間。
